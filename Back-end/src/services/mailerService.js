require('dotenv').config()
const nodemailer = require("nodemailer");

let sendEmail = async (dataMail) => {

    const transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 465,
        secure: true,
        auth: {
            // TODO: replace `user` and `pass` values from <https://forwardemail.net>
            user: process.env.APP_EMAIL,
            pass: process.env.APP_EMAIL_PASSWORD,
        },
    });

    const contentMail = (dataMail) => {
        console.log('>>>>> dataMail.cancelBooking:', dataMail.cancelBooking)
        let content = ''
        if (dataMail.currentLang === 'vi') {
            content =
                `
                <h3>Xin ch√†o, ${dataMail.name}</h3>
                <p style='font-style: italic'>B·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y do ƒë√£ ƒë·∫∑t l·ªãch tr√™n h·ªá th·ªëng chƒÉm s√≥c s·ª©c kh·ªèe Booking Health</p>
                <br/>
                <p>Th√¥ng tin ƒë·∫∑t l·ªãch:</p>
                <b>Th·ªùi gian kh√°m: ${dataMail.timeBooking}</b>
                <div>
                <b>B√°c sƒ©: ${dataMail.doctorBooking}</b>
                </div>
                <br/>
                <p>Vui l√≤ng nh·∫•n v√†o ƒë∆∞·ªùng link ph√≠a d∆∞·ªõi ƒë·ªÉ x√°c nh·∫≠n l·ªãch h·∫πn kh√°m b·ªánh n√†y.</p>
                <div><a href=${dataMail.redirectLink} target='_blank'>  
                Nh·∫•n v√†o ƒë√¢y
                </a></div>
                <b>H·ªßy l·ªãch h·∫πn kh√°m b·ªánh.</b>
                <div><a href=${dataMail.cancelBooking} target='_blank'>  
                Nh·∫•n v√†o ƒë√¢y ƒë·ªÉ h·ªßy l·ªãch h·∫πn kh√°m b·ªánh
                </a></div>
                <div>Xin c·∫£m ∆°n qu√Ω kh√°ch h√†ng tin d√πng Booking Health</div>
                `
        } else {
            content =
                `
            <h3>Dear, ${dataMail.name}</h3>
            <p style='font-style: italic'>You received this email because you made a booking on the Booking Health healthcare website</p>
            <br/>
            <p>Booking information:</p>
            <b>Examination time: ${dataMail.timeBooking}</b>
            <div>
            <b>Doctor: ${dataMail.doctorBooking}</b>
            </div>
            <br/>
            <p>Please click on the link below to confirm this medical appointment.</p>
            <div><a href=${dataMail.redirectLink} target='_blank'>  
            Click here
            </a></div>
            <b>Cancel medical appointment.</b>
                <div><a href=${dataMail.cancelBooking} target='_blank'>  
                Click here to cancel your medical appointment
                </a></div>
            <div>Thank you for trusting Booking Health</div>
            `
        }
        return content
    }


    const info = await transporter.sendMail({
        from: '"Felix Dev üëª" <From Booking Health>', // sender address
        to: dataMail.receiver, // list of receivers
        subject: dataMail.currentLang === 'vi' ? "Th√¥ng tin ƒë·∫∑t l·ªãch kh√°m b·ªánh" : "Information for scheduling medical examination", // Subject line
        html: contentMail(dataMail)
    });

}

const senRemedy = async (data) => {
    const transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 465,
        secure: true,
        auth: {
            // TODO: replace `user` and `pass` values from <https://forwardemail.net>
            user: process.env.APP_EMAIL,
            pass: process.env.APP_EMAIL_PASSWORD,
        },
    });

    const contentRemedyMail = (data) => {
        let result = ''
        if (data.language === 'vi') {
            result = `
        
            <h3>Xin ch√†o ${data.patientName}</h3>
            <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t l·ªãch kh√°m b·ªánh v·ªõi Booking Health.</p>
            <p>Th√¥ng tin ƒë∆°n thu·ªëc/ h√≥a ƒë∆°n ƒë∆∞·ª£c g·ª≠i trong file ƒë√≠nh k√®m. </p>
            
            <div>Xin ch√¢n th√†nh c·∫£m ∆°n</div>
            `
        }
        if (data.language === 'en') {
            result = `
        
            <h3>Dear ${data.patientName}</h3>
            <p>Thank you for booking your medical appointment with Booking Health.</p>
            <p>Prescription/invoice information is sent in the attached file.</p>
            
            <div>Sincerely thank</div>
            `
        }
        return result
    }

    const info = await transporter.sendMail({
        from: '"Felix Dev üëª" <From Booking Health>', // sender address
        to: data.receiver, // list of receivers
        subject: data.language === 'vi' ? "K·∫øt qu·∫£ ƒë·∫∑t l·ªãch kh√°m b·ªánh" : "Result of medical examination appointment", // Subject line
        html: contentRemedyMail(data),
        attachments: [{
            filename: `booking-health-remedy-${data.patientId}- ${new Date().getTime()}.png`,
            content: data.imgBase64.split("base64,")[1],
            encoding: 'base64'
        },]
    });
}

let sendCode = async (user, OTP) => {
    const transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 465,
        secure: true,
        auth: {
            // TODO: replace `user` and `pass` values from <https://forwardemail.net>
            user: process.env.APP_EMAIL,
            pass: process.env.APP_EMAIL_PASSWORD,
        },
    });

    const contentMail = (user) => {
        let content = ''
        content =
            `<h3>Xin ch√†o, ${user.lastName} ${user.firstName}</h3>
        <p style='font-style: italic'>ƒê√¢y l√† m√£ x√°c th·ª±c email c·ªßa b·∫°n:</p>
        <br/>
        <div>
        <h1 style='text-align: center'>${OTP}</h1>
        </div>
        <br/>
        <p>Vui l√≤ng b·∫£o qu·∫£n m√£ x√°c th·ª±c c·∫©n th·∫≠n v√† kh√¥ng ƒë·ªÉ ng∆∞·ªùi kh√°c nh√¨n th·∫•y.</p>

        <div>Xin c·∫£m ∆°n</div>`

        return content
    }

    const info = await transporter.sendMail({
        from: '"Felix Dev üëª" <khanhduy8768@gmail.com>', // sender address
        to: user.email, // list of receivers
        subject: "M√£ x√°c th·ª±c OTP", // Subject line
        html: contentMail(user)
    });

}





module.exports = { sendEmail, sendCode, senRemedy }